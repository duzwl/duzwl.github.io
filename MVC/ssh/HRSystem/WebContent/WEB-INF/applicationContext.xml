<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	
	<!-- 定义数据源Bean，使用C3P0数据源实现 -->
	<!-- 设置连接数据库的驱动、URL、用户名、密码
		连接池最大连接数、最小连接数、初始连接数等参数 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"
		p:driverClass="org.gjt.mm.mysql.Driver"
		p:jdbcUrl="jdbc:mysql://localhost:3306/hrsystem"
		p:user="root"
		p:password="root"
		p:maxPoolSize="40"
		p:minPoolSize="1"
		p:initialPoolSize="1"
		p:maxIdleTime="20"/>
	
	<!-- 定义Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<!-- 依赖注入数据源，注入正是上面定义的dataSource -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mappingResouces属性用来列出全部映射文件 -->
		<property name="mappingResources">
			<list>
				<!-- 以下用来列出Hibernate映射文件 -->
				<value>hrsystem/domain/Application.hbm.xml</value>
				<value>hrsystem/domain/Attend.hbm.xml</value>
				<value>hrsystem/domain/AttendType.hbm.xml</value>
				<value>hrsystem/domain/CheckBack.hbm.xml</value>
				<value>hrsystem/domain/Employee.hbm.xml</value>
				<value>hrsystem/domain/Payment.hbm.xml</value>
				
				
			</list>
		</property>
		<!-- 定义Hibernate的SessionFactory的属性 -->
		<property name="hibernateProperties">
			<props>  
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>  
				<prop key="hibernate.show_sql">true</prop>  
				<prop key="hibernate.form_sql">true</prop>  
				<prop key="hibernate.hbm2ddl.auto">update</prop>  
				<prop key="hibernate.connection.username">root</prop>  
				<prop key="hibernate.connection.password">root</prop>  
				<prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/hrsystem</prop>
				<prop key="hibernate.connection.driverClass">org.gjt.mm.mysql.Driver</prop>
				<prop key="hibernate.default_batch_fetch_size">30</prop>  
				<prop key="hibernate.c3p0.validate">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.maxPoolSize">40</prop>
				<prop key="hibernate.minPoolSize">1</prop>
				<prop key="hibernate.initialPoolSize">1</prop>
				<prop key="hibernate.maxIdleTime">20</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
	<!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
	<!-- 并注入SessionFactory的引用 -->
	<bean id="transactionManager" class=
		"org.springframework.orm.hibernate5.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory"/>
	<!-- 配置事务增强处理Bean，指定事务管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<!-- 其他方法使用默认的事务设置 -->
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 配置一个切入点，匹配empManager和mgrManager两个Bean的所有方法的执行 -->
		<aop:pointcut id="leePointcut"
			expression="bean(empManager)||bean(mgrManager)"/>
		<!-- 指定在leePointcut切入点应用txAdvice事务增强处理 -->
		<aop:advisor advice-ref="txAdvice" 
			pointcut-ref="leePointcut"/>
	</aop:config>
	
	<bean id="managerTemplate" abstract="true" lazy-init="true"
		p:appDao-ref="appDao"
		p:attendDao-ref="attendDao"
		p:typeDao-ref="attendTypeDao"
		p:checkDao-ref="checkDao"
		p:empDao-ref="employeeDao"
		p:mgrDao-ref="managerDao"
		p:payDao-ref="payDao"/>
	<bean id="empManager"
		class="hrsystem.service.impl.EmpManagerImpl"
		parent="managerTemplate"/>
	<bean id="mgrManager"
		class="hrsystem.service.impl.MgrManagerImpl"
		parent="managerTemplate"/>
		
	<bean id="cronTriggerPay" 
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean 
				class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<!-- 指定任务Bean的实现类 -->
				<property name="jobClass"
					value="hrsystem.schedule.PayJob"/>
				<!-- 为任务Bean注入属性 -->
				<property name="jobDataAsMap">
					<map>
						<entry key="empMgr" value-ref="empManager"/>
					</map>
				</property>
			</bean>
		</property>
		<!-- 指定Cron表达式：每月3日2时启动 -->
		<property name="cronExpression" value="0 0 2 3 * ? *"/>
	</bean>

	<bean id="cronTriggerPunch"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
				<!-- 指定任务Bean的实现类 -->
				<property name="jobClass" 
					value="hrsystem.schedule.PunchJob"/>
				<!-- 为任务Bean注入属性 -->
				<property name="jobDataAsMap">
					<map>
						<entry key="empMgr" value-ref="empManager"/>
					</map>
				</property>
			</bean>
		</property>
		<!-- 指定Cron表达式：周一到周五7点、12点执行调度 -->
		<property name="cronExpression" 
			value="0 0 7,12 ? * MON-FRI"/>
	</bean>
	
	<!-- 执行实际的调度调度 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="cronTriggerPay"/>
				<ref local="cronTriggerPunch"/>
			</list>
		</property>
	</bean>
</beans>
